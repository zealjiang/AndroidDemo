import com.example.plugin.Dependencies
import com.example.plugin.Versions

plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'com.example.plugin'
}
apply plugin: 'kotlin-android'

android {
    compileSdk Versions.compileSdk

    defaultConfig {
        applicationId "com.example.main"
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion
        versionCode Versions.versionCode
        versionName Versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true //开启混淆
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            //aidl.srcDirs = ['src/main/aidl']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        aidl true
    }

    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.3"
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Dependencies.androidx_appcompat
    implementation Dependencies.material
    implementation Dependencies.constraintlayout
    implementation project(path: ':network')
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation Dependencies.lifecycle_process
    implementation Dependencies.lifecycle_viewmodel_ktx
    implementation Dependencies.lifecycle_runtime_ktx

    implementation 'org.ow2.asm:asm:7.1'
    implementation 'org.ow2.asm:asm-commons:7.1'

    implementation files('libs/jdk-rt.jar')
    //implementation files('libs/kssdk-all-3.3.22.2-7997ae2df.aar')
    //implementation (name: 'kssdk-all-3.3.22.2-7997ae2df', ext:'aar')
    implementation files('libs/javassist.jar')

    implementation project(':router_compiler')
    kapt project(':router_compiler')
    implementation Dependencies.auto_service
    kapt Dependencies.auto_service

    implementation project(':lib-processor')
    kapt project(':lib-processor')

    implementation project(path: ':router')
    implementation project(path: ':takeout')

    api(name: 'mmkv', ext: 'aar')
    implementation Dependencies.core_ktx
    implementation Dependencies.core_google_shortcuts
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"//$kotlin_version"

    //arouter
    // Replace with the latest version
    implementation Dependencies.arouter_api
    kapt Dependencies.arouter_compiler

    implementation Dependencies.play_services_auth
    // Import the Firebase BoM
    implementation platform(Dependencies.firebase_bom)
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'


    // CameraX core library using the camera2 implementation
    def camerax_version = "1.2.1"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    api "androidx.camera:camera-core:${camerax_version}"
    api "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    api "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX VideoCapture library
    api "androidx.camera:camera-video:${camerax_version}"
    // If you want to additionally use the CameraX View class
    api "androidx.camera:camera-view:${camerax_version}"
    // If you want to additionally use the CameraX Extensions library
    api "androidx.camera:camera-extensions:${camerax_version}"


    //compose相关
    implementation(platform("androidx.compose:compose-bom:2023.03.00"))
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    implementation("androidx.activity:activity-compose:1.7.0")

}
repositories {
    mavenCentral()
}